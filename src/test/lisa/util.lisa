(define-macro (any+ (... xs)) (.mkString xs ""))

(define-macro (spy x)
    (define code (.code (wrap x)))
    '(let ((r ~x))
        (println! ~code "=>" (string r))
        r))

(define-macro (make-ref x)
    '(block
        (define (ref 'get) ~x)
        (define (ref 'is-ref?) true)
        (define (ref 'set new-val) (set! ~x new-val))
        (define (ref 'to-string) (+ "Ref(" (string ~x) ")"))
        ref))
